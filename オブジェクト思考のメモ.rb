オブジェクト思考のメモを記載していく
オブジェクト思考とは、クラス（設計図）をインスタンス（実体）にしてあげる一連の
流れのことをオブジェクト思考という。

オブジェクト思考は、クラスの方を修正してあげると沢山のオブジェクトがある時にとても
素早く楽に直せる。

オブジェクト指向の三代要素
１、カプセル化
特徴をリモコンで例えると。。。
　１、テレビをつけるための命令を計算する
  ２、赤外線を送信する命令を出す。
  ３、実際に赤外線を送る。
電源をつける　→　適切な命名！（powerメソッド）

細かな手順を「一言で表したメソッド」としてまとめ
メソッド名を読むだけで何をしているのかを理解できるようにする。

２、継承
TVリモコン　→　TV　＋　ビデオリモコン
　　　　　　→　TVリモコン
　基本機能を持った設計図（Class）を下に動作を少し変えた　or
 追加の機能wつけた設計図を作成できる。
メソッドの上書きをして設計図を追加して書いてあげる。

３、ポリモーフィズム　（多様性）
？　は　●●　の電源をつける。　TV　エアコン　ラジオ

同じメソッドはループでコードをまとめられる
テレビリモコン.power =>"テレビの電源をつける"
エアコンリモコン.power =>"エアコンの電源をつける"
ラジオリモコン.power =>"ラジオの電源をつける"
　　　　　　　　　　↓
controllers = [テレビリモコン,エアコンリモコン,ラジオリモコン]
controllers.each do |controller|
  controller.power
end
これでひとまとめにできる。

まとめ
１、カプセル化
メソッドに適切な命名をすることで「複雑な処理を抽象化」できる
２、継承
基本設計ずを下に拡張した設計図を作ることができ、
「同じコードを何度も」書く必要がなくなる
３、ポリモーフィズム
同じメソッド名で違う動作をする設計図を書くことで
「コードを綺麗にまとめる」ことができる。
